<?php

/**
* JAMSS - Joomla! Anti-Malware Scan Script
* 
* @author Bernard Toplak [WarpMax] <bernard@warpmax.com>
* @link http://www.warpmax.com
* 
* This is a list of stings and patterns that indicate 
* a potential malware infection
* 
* ALL COMMENTS AND SUGGESTIONS ARE WELCOME!
* 
* @license http://opensource.org/licenses/gpl-3.0.htmlďż˝GNUďż˝Publicďż˝License, version 3 (GPL-3.0)
* This program is free software; you can redistribute it and/or modify it under 
* the terms of the GNU General Public License as published by the Free Software
* Foundation; either version 3 of the License, or (at your option) any later 
* version.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
* more details.
* 
*/


    $jamssStrings = 'r0nin|m0rtix|upl0ad|r57shell|c99shell|shellbot|phpshell|void\.ru|phpremoteview|directmail|bash_history|multiviews|cwings|vandal|bitchx|eggdrop|guardservices|psybnc|dalnet|undernet|vulnscan|spymeta|raslan58|Webshell|str_rot13|FilesMan|Web Shell';
	
	// this patterns will be used if GET parameter ?deepscan=1 is set while calling jamms file
	$jammsDeepSearchStrings = 'eval|base64_decode|base64_encode|gzdecode|gzdeflate|gzuncompress|gzcompress|readgzfile|zlib_decode|zlib_encode|gzfile|gzget|gzpassthru';

    // the patterns to search for
    $jamssPatterns = array(
        array( 'preg_replace.*\(.*e\s*[\"\'\”].*\)', // [0] = RegEx search pattern
                'PHP: preg_replace/preg_replace_all Eval', // [1] = Name / Title
                '1', // [2] =  number
                'We detected preg_replace/preg_replace_all function that evaluates mathed code. This means if PHP code is passed it will be executed.',  // [3] = description
                'Part example code from http://sucuri.net/malware/backdoor-phppreg_replaceeval'), // [4] = More Information link
        array( 'c999sh_surl',
                'Backdoor: PHP:C99:045',
                '2',
                'Detected the "C99? backdoor that allows attackers to manage (and reinfect) your site remotely. It is often used as part of a compromise to maintain access to the hacked sites.',
                'http://sucuri.net/malware/backdoor-phpc99045'),
        array( 'preg_match\s*\(\s*\"\s*\/\s*bot\s*\/\s*\"',
                'Backdoor: PHP:R57:01',
                '3',
                'Detected the "R57? backdoor that allows attackers to access, modify and reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs.',
                'http://sucuri.net/malware/backdoor-phpr5701'),
        array( 'eval\s*\(stripslashes\s*\(\s*\$_REQUEST\s*\[\s*\\\s*[\'\"]\s*asc\s*\\\s*[\'\"]',
                'Backdoor: PHP:GENERIC:07',
                '5',
                'Detected a generic backdoor that allows attackers to upload files, delete files, access, modify and/or reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs. It also includes uploadify scripts and similars that offer upload options without security. ',
                'http://sucuri.net/malware/backdoor-phpgeneric07'),
        array( 'https?\S{1,63}\.ru',
                'russian URL',
                '6',
                'Detected a .RU domain link, as there are many attacks leading the innocent visitors to .RU pages. Maybe i\'s valid link, but we leave it to you to check this out.',
            ),
        array( 'preg_replace\s*\(\s*[\"\'\”]\s*\/\s*\.\s*\*\s*\/\s*e\s*[\"\'\”]\s*,\s*[\"\'\”]\s*\\x65\\x76\\x61\\x6c',
                'Backdoor: PHP:Filesman:02',
                '7',
                'We detected the “Filesman” backdoor that allows attackers to access, modify and reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs.',
                'http://sucuri.net/malware/backdoor-phpfilesman02'),
        array('(include|require)(_once)*\s*[\"\']\s*php:\/\/input\s*[\"\']',
                'PHP:\input include',
                '8',
                'Detected the method of reading input through PHP protocol handler in include/require statements.',),
        array('data:;base64',
                'data:;base64 include',
                '9',
                'Detected the method of executing base64 data in include.',),
        array('RewriteCond\s*%\{HTTP_REFERER\}',
                '.HTAC RewriteCond-Referer',
                '10',
                'Your .htaccess file has a conditional redirection based on "HTTP Referer". This means it redirects according to site/url from where your visitors came to your site. Such technique has been used for unwanted redirections after coming from Google or other search engines, so check this directive carefully.',),
        array('brute\s*force',
                '"Brute Force" words',
                '11',
                'We detected the "Brute Force" words mentioned in code. <u>Sometimes it\'s a "false positive"</u> because several developers like to mention it in they code, but it\'s worth double-checking if this file is untouche (eg. compare it with one in original extension package).',),
        array('eval\s*\(\s*(gzuncompress|gzinflate|base64_decode|str_rot13)',
                'PHP: Eval+(GZINFLATE||GZUNCOMPRESS||B64||ROT13)',
                '12',
                'We detected one of base64 code that will get evaluated, and this might be a fingerprint of a malware.',),
        array('GIF89a.*[\r\n]*.*<\?php',
                'PHP file desguised as GIF image',
                '15',
                'We detected a PHP file that was most probably uploaded as an image via webform that loosely only checks file headers.',),
        array('\$ip\s*=\s*getenv\(["\']REMOTE_ADDR["\']\);\s*[\r\n]\$message',
                'Probably malicious PHP script that "calls home"',
                '16',
                'This pattern detects script variations used for informing attackers about found vulnerable website.',),
        array( '(gzuncompress|gzinflate|base64_decode|str_rot13).*(gzuncompress|gzinflate|base64_decode|str_rot13)',
                'PHP: double GZINFLATE||GZUNCOMPRESS||B64||ROT13',
                '17',
                'Detected a highly encoded (and malicious) code hidden under a loop of gzinflate/gzuncompress/base64_decode calls. After decoded, it goes through an eval call to execute the code.',
				'Thanks to Dario Pintarić (dario.pintaric[et}orion-web.hr for this report!'),
    );

?>
