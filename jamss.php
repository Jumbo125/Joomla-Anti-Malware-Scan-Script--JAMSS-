<?php
/**
 * JAMSS - Joomla! Anti-Malware Scan Script
 * @version 0.2
 * 
 * @author Bernard Toplak [WarpMax] <bernard@orion-web.hr>
 * @link http://www.orion-web.hr
 * 
 * This script should be used for searching the infected or malware/backdoor
 * files in Joomla! installations.
 * 
 * ALL COMMENTS AND SUGGESTIONS ARE WELCOME!
 * 
 * 
 * @license http://opensource.org/licenses/gpl-3.0.htmlďż˝GNUďż˝Publicďż˝License, version 3 (GPL-3.0)
 * This program is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 3 of the License, or (at your option) any later 
 * version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
 * more details.
 * 
 */
define('SCRIPT', 'JAMSS - Joomla! Anti-Malware Scan Script');
define('VERSION', '0.2');
define('CREDITS', 'Development of this script was sponsored by <a href="http://www.orion-web.hr/">ORION Informatics, Varaždin - Croatia</a>');
define('NL', '<br />');

/* PHP Version Test */
if (PHP_MAJOR_VERSION < 5) {
    die('You have to deploy on at least PHP 5 to be able to use this script!');
}

/* * * * * * * * * * * * * * *  SETTINGS  * * * * * * * * * * * * * * */
ini_set('max_execution_time', '0'); // supress problems with timeouts
ini_set('set_time_limit', '0'); // supress problems with timeouts
ini_set('display_errors', '0'); // show/hide errors

/*
 *  not scanning JS files in the early versions
 *  as it gives many false positives (eg. "eval")
 */
//$fileExt = 'php|js|txt|html|htaccess' ;
$fileExt = 'php|php3|php4|php5|phps|txt|html|htaccess|gif'; // file extensions

$ignoreDirs = '.|..|.DS_Store|.svn|.git'; // dirnames to ignore

$directory = '.'; // a directory to scan; default: current dir
/* * * * * * * * * * * * * *  SETTINGS END  * * * * * * * * * * * * * */

if (isset($_GET['action']) && $_GET['action'] == 'autodestruct')
    deleteFile();

/* * * * *  Patterns Start * * * * */
$jamssStrings = 'r0nin|m0rtix|upl0ad|r57shell|c99shell|shellbot|phpshell|void\.ru|phpremoteview|directmail|bash_history|multiviews|cwings|vandal|bitchx|eggdrop|guardservices|psybnc|dalnet|undernet|vulnscan|spymeta|raslan58|Webshell|str_rot13|FilesMan|Web Shell';

// this patterns will be used if GET parameter ?deepscan=1 is set while calling jamss.php file
$jamssDeepSearchStrings = 'eval|base64_decode|base64_encode|gzdecode|gzdeflate|gzuncompress|gzcompress|readgzfile|zlib_decode|zlib_encode|gzfile|gzget|gzpassthru|iframe';

// the patterns to search for
$jamssPatterns = array(
    array('preg_replace\s*\(\s*[\"\'].*e\s*[\"\'].*\)', // [0] = RegEx search pattern
        'PHP: preg_replace Eval', // [1] = Name / Title
        '1', // [2] =  number
        'We detected preg_replace function that evaluates (executes) mathed code. This means if PHP code is passed it will be executed.', // [3] = description
        'Part example code from http://sucuri.net/malware/backdoor-phppreg_replaceeval'), // [4] = More Information link
    array('c999sh_surl',
        'Backdoor: PHP:C99:045',
        '2',
        'Detected the "C99? backdoor that allows attackers to manage (and reinfect) your site remotely. It is often used as part of a compromise to maintain access to the hacked sites.',
        'http://sucuri.net/malware/backdoor-phpc99045'),
    array('preg_match\s*\(\s*\"\s*\/\s*bot\s*\/\s*\"',
        'Backdoor: PHP:R57:01',
        '3',
        'Detected the "R57? backdoor that allows attackers to access, modify and reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs.',
        'http://sucuri.net/malware/backdoor-phpr5701'),
    array('eval\s*\(stripslashes\s*\(\s*\$_REQUEST\s*\[\s*\\\s*[\'\"]\s*asc\s*\\\s*[\'\"]',
        'Backdoor: PHP:GENERIC:07',
        '5',
        'Detected a generic backdoor that allows attackers to upload files, delete files, access, modify and/or reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs. It also includes uploadify scripts and similars that offer upload options without security. ',
        'http://sucuri.net/malware/backdoor-phpgeneric07'),
    array('https?\S{1,63}\.ru',
        'russian URL',
        '6',
        'Detected a .RU domain link, as there are many attacks leading the innocent visitors to .RU pages. Maybe i\'s valid link, but we leave it to you to check this out.',
    ),
    array('preg_replace\s*\(\s*[\"\'\”]\s*\/\s*\.\s*\*\s*\/\s*e\s*[\"\'\”]\s*,\s*[\"\'\”]\s*\\x65\\x76\\x61\\x6c',
        'Backdoor: PHP:Filesman:02',
        '7',
        'We detected the “Filesman” backdoor that allows attackers to access, modify and reinfect your site. It is often hidden in the filesystem and hard to find without access to the server or logs.',
        'http://sucuri.net/malware/backdoor-phpfilesman02'),
    array('(include|require)(_once)*\s*[\"\']\s*php:\/\/input\s*[\"\']',
        'PHP:\input include',
        '8',
        'Detected the method of reading input through PHP protocol handler in include/require statements.',),
    array('data:;base64',
        'data:;base64 include',
        '9',
        'Detected the method of executing base64 data in include.',),
    array('RewriteCond\s*%\{HTTP_REFERER\}',
        '.HTAC RewriteCond-Referer',
        '10',
        'Your .htaccess file has a conditional redirection based on "HTTP Referer". This means it redirects according to site/url from where your visitors came to your site. Such technique has been used for unwanted redirections after coming from Google or other search engines, so check this directive carefully.',),
    array('brute\s*force',
        '"Brute Force" words',
        '11',
        'We detected the "Brute Force" words mentioned in code. <u>Sometimes it\'s a "false positive"</u> because several developers like to mention it in they code, but it\'s worth double-checking if this file is untouche (eg. compare it with one in original extension package).',),
    array('eval\s*\(\s*(gzuncompress|gzinflate|base64_decode|str_rot13)',
        'PHP: Eval+(GZINFLATE||GZUNCOMPRESS||B64||ROT13)',
        '12',
        'We detected one of base64 code that will get evaluated, and this might be a fingerprint of a malware.',),
    array('GIF89a.*[\r\n]*.*<\?php',
        'PHP file desguised as GIF image',
        '15',
        'We detected a PHP file that was most probably uploaded as an image via webform that loosely only checks file headers.',),
    array('\$ip\s*=\s*getenv\(["\']REMOTE_ADDR["\']\);\s*[\r\n]\$message',
        'Probably malicious PHP script that "calls home"',
        '16',
        'This pattern detects script variations used for informing attackers about found vulnerable website.',),
    array('(gzuncompress|gzinflate|base64_decode|str_rot13).*(gzuncompress|gzinflate|base64_decode|str_rot13)',
        'PHP: double GZINFLATE||GZUNCOMPRESS||B64||ROT13',
        '17',
        'Detected a highly encoded (and malicious) code hidden under a loop of gzinflate/gzuncompress/base64_decode calls. After decoded, it goes through an eval call to execute the code.',
        'Thanks to Dario Pintarić (dario.pintaric[et}orion-web.hr for this report!'),
);

/* * * * *  Patterns End * * * * */


// check if DeepScan should be done
if (isset($_GET['deepscan'])) {
    $patterns = array_merge($jamssPatterns, explode('|', $jamssStrings), explode('|', $jamssDeepSearchStrings));
} else {
    $patterns = array_merge($jamssPatterns, explode('|', $jamssStrings));
}
$ext = explode('|', $fileExt);

/**
 * Get the list of the files in rootdir and all subdirs<br>
 * 
 * @global string $ignoreDirs   directories to be ignored
 * @param string $dir   directory to scan for files
 * @return array    array with found files 
 */
function get_filelist($dir) {
    global $ignoreDirs;
    $ignoreArr = explode('|', $ignoreDirs);

    $path = '';
    $toResolve = array($dir);
    while ($toResolve) {
        $thisDir = array_pop($toResolve);
        if ($dirContent = scandir($thisDir)) {
            foreach ($dirContent As $content) {
                if (!in_array($content, $ignoreArr)) { // skipping ignored dirs
                    $thisFile = "$thisDir/$content";
                    if (is_file($thisFile)) {
                        $path[$thisFile] = md5_file($thisFile);
                        scan_file($thisFile);
                    } else {
                        $toResolve[] = $thisFile;
                    }
                }
            }
        }
    }
    return $path;
}

/**
 * Scan given file for all malware patterns
 * 
 * @global string $fileExt  file extension list to be scanned
 * @global array $patterns array of patterns to search for
 * @param string $path  path of the scanned file
 */
function scan_file($path) {
    global $ext, $patterns;
    $total_results = NULL;

    if (in_array(pathinfo($path, PATHINFO_EXTENSION), $ext) && filesize($path)/* skip empty ones */ && !stripos($path, 'jamss')/* skip patterns file */) {

        if (!($content = file_get_contents($path))) {
            echo("<p>Could not check $path</p>\n");
        } else { // do a search for fingerprints
            foreach ($patterns As $pattern) {
                if (is_array($pattern)) { // it's a pattern
                    // RegEx modifiers: i=case-insensitive; s=dot matches also newlines; S=optimization
                    preg_match_all('/' . $pattern[0] . '/isS', $content, $found, PREG_OFFSET_CAPTURE);
                } else { // it's a string
                    preg_match_all('/' . $pattern . '/isS', $content, $found, PREG_OFFSET_CAPTURE);
                }
                $all_results = $found[0]; // remove outer array from results
                $results_count = count($all_results); // count the number of results
                $total_results += $results_count; // total results of all fingerprints
                if (!empty($all_results)) {
                    if (is_array($pattern)) { // then it has some additional comments
                        echo "<hr><p>In file <span class=\"file\">$path</span>",
                        "-> we found $results_count occurence(s) of <span class=\"pattern\">Pattern #$pattern[2] - $pattern[1]</span>", NL,
                        " ---> <strong>Details:</strong> <span class=\"pattern_desc\">\"$pattern[3]\"</span></p>\n";
                        foreach ($all_results as $match) {
                            // output the line of malware code, but sanitize it before
                            echo "<span class=\"offset\">@Offset: $match[1]</span>:",
                            "<pre>... " . htmlentities(substr($content, $match[1], 200), ENT_QUOTES) . " ...</pre>\n";
                        }
                    } else { // it's a string, no comments available
                        echo "<hr><p>In file <span class=\"file\">$path</span>",
                        "-> we found $results_count occurence(s) of <span class=\"pattern\">String '$pattern'</span>", NL;
                        foreach ($all_results as $match) {
                            // output the line of malware code, but sanitize it before
                            echo "<span class=\"offset\">@Offset: $match[1]</span>:",
                            "<pre>... " . htmlentities(substr($content, $match[1], 200), ENT_QUOTES) . " ...</pre>\n";
                        }
                    }
                }
            }
            unset($content);
        }
    }
}

/**
 * Function that deletes this file when finished
 */
function deleteFile() {
    
        $host = $_SERVER['HTTP_HOST'];
        $uri = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');

        // try to set script to 777 to make sure we have permission to delete
        chmod('jamss.php', 0777);
        unlink('jamss.php'); // Delete the file.

        /* Message and link to home page of site. */
        echo '<div id="slowScreenSplash" style="padding:20px;border: 2px solid #4D8000;background-color:#FFFAF0;border-radius: 10px;-moz-border-radius: 10px;-webkit-border-radius: 10px;margin: 0 auto; margin-top:50px;margin-bottom:20px;width:700px;position:relative;z-index:9999;top:10%;" align="center">';

        $page = ("http://$host$uri/");
        $filename = 'jamss.php';
        // Something went wrong and the script was not deleted
        if (file_exists($filename)) {
            chmod('jamss.php', 0644);
            echo "<p><font color='#FF0000' size='4'>Oops!</size></font color>";
            echo '<p><font color="#FF0000" size="3">Something went wrong with the delete process and the file </font color><font color="#000000"size="3">$filename</font color></size><font color="#FF0000"> still exists. </font color></p>';
            echo '<p><font color="#FF0000" size="3">For site security, please remove the file </font color><font color="#000000"size="3">$filename</font color></size><font color="#FF0000"> manually using your ftp program.</font color></p>';
            echo '<p>',CREDITS,'</p>';
        } else {
            echo '<p><font color="#000000" size="3">Thank You for using the JAMSS. </font color></p>';
            echo '<p>',CREDITS,'</p>';
        }
        echo '<a href="',$page,'">Go to your Home Page.</a>';

        exit;
    
// end delete script    
}
?>


<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title><?php echo SCRIPT, ' v.', VERSION; ?></title>
        <style>
            .file { font-weight: bold; color: blue; }
            .pattern { font-weight: bold; color: red; }
            .pattern_desc { font-style: italic; color: blueviolet; }
            .offset { font-weight: bold; font-style: italic; }
            .end { font-size: 18px; font-weight: bold; color: cadetblue; }
        </style>
    </head>
    <body>
        <h1><?php echo SCRIPT, ' v.', VERSION; ?></h1>
        <?php
        $before = microtime(true); // START benchmark
        // do the scan
        get_filelist($directory);

        $after = microtime(true); // STOP benchmark
        echo 'Execution time of this scan was ', ($after - $before), ' sec! <br>';
        ?>
        <hr />
        <p>
            Thank you for using JAMSS!<br/>
            It is advisable to delete this script after using it. You can do it by <a href="jamss.php?action=autodestruct">clicking here</a>.
        </p>
        <p>
            <?php echo CREDITS; ?>
        </p>
    </body>
</html>